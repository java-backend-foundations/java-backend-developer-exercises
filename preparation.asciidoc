:toc: macro
:sectnums:
:sectnumlevels: 2

= Preparation for the training

toc::[]

== Setup the development environment

Before we dive into the Spring Boot training, please ensure your development environment is ready by downloading and setting up the following software on your Windows machine.

[NOTE]
====
If you want to avoid problems during the training, please DO NOT use paths containing spaces like `C:\Program Files`
====

=== Software List

- *Git for Windows*: link:https://git-scm.com/download/win[Download]
- *Apache Maven* (Optional): link:https://maven.apache.org/download.cgi[Download] - Most Spring Boot projects use Maven Wrapper (`mvnw`), making separate installation not mandatory
- *JDK 21*:
** For current recommendations, visit: link:https://whichjdk.com/[WhichJDK.com]
** Recommended: Adoptium OpenJDK (*_Eclipse Temurin_*): link:https://adoptium.net/[Download]
** Oracle JDK: link:https://www.oracle.com/java/technologies/javase/jdk21-archive-downloads.html[Download]
- *IDE (Choose One)*:
** IntelliJ IDEA (recommended): link:https://www.jetbrains.com/idea/download/#section=windows[Download]
** Eclipse: link:https://www.eclipse.org/downloads/[Download]
** Visual Studio Code (VSCode): link:https://code.visualstudio.com/Download[Download]
- *API client (Choose One) to test REST calls*:
** Postman: link:https://www.postman.com/downloads/[Download]
** Insomnia: link:https://insomnia.rest/download[Download]
** curl (command-line): Included with Git for Windows or install via Scoop
** HTTP client in IntelliJ (Ultimate only)

=== Setup Instructions

. Download and install *Git for Windows* from the provided link.
. Choose and download *JDK 21* from either the Oracle JDK or OpenJDK options and install it.
. Select and download an *IDE* of your choice (IntelliJ IDEA, Eclipse, or VSCode) for developing Spring Boot applications.
. (Optional) Download *Apache Maven* and extract it to a location without spaces (e.g. `C:\Programs`). Add the location to the `PATH` environment variable.
. Download and install *Postman* for testing your Spring Boot application's RESTful services.
. Create a *Github* account (if you don't have any yet).

[IMPORTANT]
====
**Maven Installation is Optional**: Spring Boot projects typically include Maven Wrapper (`mvnw.cmd`), which automatically downloads and uses the correct Maven version. Your IDE also has built-in Maven support. Only install Maven separately if you plan to use it from command line frequently.
====

Please follow the installation instructions on the download pages for each piece of software.

=== Alternative Installation (Without Admin Rights)

If you don't have administrator privileges on your machine, you can use *Scoop* package manager to install the required software:

==== Installing Scoop

. Open PowerShell (no admin rights required)
. Run the following command to install Scoop:
+
[source,powershell]
----
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
iwr -useb get.scoop.sh | iex
----

==== Installing Software with Scoop

Once Scoop is installed, you can install the required tools:

[source,powershell]
----
# Install Git
scoop install git

# Install Maven
scoop install maven

# Install JDK 21 (Eclipse Temurin)
scoop bucket add java
scoop install temurin21-jdk

# Install additional tools (optional)
scoop install postman

# curl is included with Git, or install separately:
scoop install curl
----

[NOTE]
====
Scoop installs software in your user directory (`%USERPROFILE%\scoop`), so no administrator privileges are required. It automatically manages PATH environment variables.
====

=== Verify Installation

After installation (whether traditional or via Scoop), verify your environment:

**1. Test JDK Installation**

Open Command Prompt or PowerShell and run both commands:

[source,bash]
----
java -version
javac -version
----

You should see output like:

[source,bash]
----
java version "21.0.2" 2024-01-16 LTS
Java(TM) SE Runtime Environment (build 21.0.2+13-LTS-58)
Java HotSpot(TM) 64-Bit Server VM (build 21.0.2+13-LTS-58, mixed mode, sharing)

javac 21.0.2
----

[WARNING]
====
**Common JDK Issues:**

- **"java is not recognized"**: JDK not in PATH - reinstall JDK or manually add to PATH
- **Wrong version shown**: Multiple Java versions installed - check JAVA_HOME environment variable
- **javac not found**: JRE installed instead of JDK - download full JDK, not just JRE
====

**2. Test Maven Installation (Optional)**

If you installed Maven separately:

[source,bash]
----
mvn -v
----

Expected output:

[source,bash]
----
Apache Maven 3.9.5 (57804ffe001d7215b5e7bcb531cf83df38f93546)
Maven home: C:\Programs\apache-maven-3.9.5
Java version: 21.0.2, vendor: Eclipse Adoptium
Default locale: en_US, platform encoding: UTF-8
OS name: "windows 10", version: "10.0", arch: "amd64", family: "windows"
----

[NOTE]
====
**If Maven verification fails**: Don't worry! Spring Boot projects use Maven Wrapper (`mvnw.cmd`), so manual Maven installation isn't required. Your IDE will handle Maven operations automatically.
====

**3. Test IDE Setup**

- Open your chosen IDE
- Verify it detects Java 21 in project settings
- For IntelliJ: File → Project Structure → Project → Project SDK should show Java 21
- For Eclipse: Window → Preferences → Java → Installed JREs should list Java 21

== Navigation
[grid=cols]
|===
| | link:appointment-booking-service-setup.asciidoc[Next Chapter: Setup the Spring Boot project] =>
|===
